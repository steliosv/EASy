/**
 * @file //<>//
 * @brief E.A.SY. Application. This contains the graph utils of the cli
 * @author Stelios Voutsinas (stevo)
 * @bug No known bugs.
 */
package org.sv.easy.cli;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.CopyOnWriteArrayList;
import org.knowm.xchart.SwingWrapper;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.XYChart;
import org.knowm.xchart.XYChartBuilder;
import org.knowm.xchart.XYSeries;
import org.knowm.xchart.style.Styler;
import org.knowm.xchart.style.markers.SeriesMarkers;
import org.sv.easy.engine.api.SensorEvent;
import org.sv.easy.engine.api.SensorEventListener;

public class GraphFrame extends javax.swing.JFrame implements SensorEventListener {

    private static final long serialVersionUID = 1L;
    public static final int MAX = 1000 * 20;
    private final XChartPanel<XYChart> chartPanel;

    /**
     * @brief Creates new form GraphFrame
     */
    public GraphFrame() {
        initComponents();
        XYChart chart = new XYChartBuilder()
                .xAxisTitle("X").yAxisTitle("Y")
                .width(800).height(600).title("Title").theme(Styler.ChartTheme.Matlab).build();
        // Customize Chart
        chart.getStyler().setChartTitleVisible(true);
        chart.getStyler().setChartTitleVisible(false);
        chart.getStyler().setLegendPosition(Styler.LegendPosition.OutsideE);
        chart.getStyler().setLegendVisible(false);
        chart.getStyler().setDefaultSeriesRenderStyle(XYSeries.XYSeriesRenderStyle.Line);
        chart.getStyler().setPlotGridLinesVisible(true);
        chart.getStyler().setXAxisTickMarkSpacingHint(10);
        SwingWrapper<XYChart> w = new SwingWrapper<XYChart>(chart);
        chartPanel = new XChartPanel<XYChart>(chart);
        jPanel1.add(chartPanel);
        super.setSize(800, 600);
        super.setVisible(true);
        double v = 0;
        for (int i = 0; i < MAX; i++) {
            Yv.add(0.0);
            Yt.add(0.0);
            X.add(0, v);
            v -= 0.05;
        }
        XYSeries series = chartPanel.getChart().addSeries("data", X, Yv);
        series.setMarker(SeriesMarkers.NONE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraphFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraphFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraphFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraphFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraphFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @SuppressWarnings("CollectionWithoutInitialCapacity")
    private final CopyOnWriteArrayList<Double> X = new CopyOnWriteArrayList<>();
    private final CopyOnWriteArrayList<Double> Yv = new CopyOnWriteArrayList<>();
    private final CopyOnWriteArrayList<Double> Yt = new CopyOnWriteArrayList<>();
    private double time = 0;

    @Override
    public void sensorEvent(SensorEvent e) {
        X.remove(0);
        Yv.remove(0);
        Yt.remove(0);

        X.add(time);
        time += 0.05;
        //Yv.add(e.getVoltage());
        Yv.add(e.getDisplacementZ());
        Yt.add(e.getTemperature());
        if (chartPanel.getChart().getSeriesMap().isEmpty()) {
            XYSeries series = chartPanel.getChart().addSeries("data", X, Yv);
            series.setMarker(SeriesMarkers.NONE);
        } else {
            chartPanel.getChart().updateXYSeries("data", X, Yv, null);
        }
        chartPanel.updateUI();
    }
}
